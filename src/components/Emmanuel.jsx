/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import React, { useEffect, useRef, useState } from 'react'
import { useGLTF, useAnimations } from '@react-three/drei'
import { useFrame, useThree } from '@react-three/fiber';

export function Emmanuel(props) {
  const group = useRef()
  const { nodes, materials, animations } = useGLTF('/models/emmanuel.glb')
  const { actions } = useAnimations(animations, group);
  const [ascend, setAscend] = useState(false);
  const [pos, setPos] = useState([5, 0]);
  const [time, setTime] = useState(0);

    const handleClick = (() => {
        setAscend(!ascend);
    });

  useEffect(() => {
    // console.log(actions);
    if(ascend === false) {
        actions["standing"].reset().play();
    } else if(ascend === true) {
        actions["ascending"].reset().fadeIn(0.5).play();
    }
    group.current.position.x = pos[0];
    group.current.position.z = pos[1];

    return () => actions["ascending"].fadeOut(0.1);

  }, [ascend]);

  useFrame((state, delta) => {
    if(ascend === true) {
        group.current.rotation.y -= 0.0052;
        group.current.position.y += 0.01;
        group.current.position.x = pos[0];
        group.current.position.z = pos[1];
        setPos([5 * Math.cos(time * 0.3),  5 * Math.sin(time * 0.3)])
        setTime(time + delta);
    }
  });

  

  return (
    <group ref={group} {...props} dispose={null} onDoubleClick={handleClick}>
      <group name="Scene">
        <group name="emmanuel" rotation={[Math.PI / 2, 0, 0]} scale={0.01}>
          <skinnedMesh
            name="black002"
            geometry={nodes.black002.geometry}
            material={materials['black.001']}
            skeleton={nodes.black002.skeleton}
          />
          <skinnedMesh
            name="white001"
            geometry={nodes.white001.geometry}
            material={materials['white.001']}
            skeleton={nodes.white001.skeleton}
          />
          <primitive object={nodes.mixamorigHips} />
        </group>
      </group>
    </group>
  )
}

useGLTF.preload('/models/emmanuel.glb')